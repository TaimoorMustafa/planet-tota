{"ast":null,"code":"var _jsxFileName = \"C:\\\\Taimoor Work\\\\Taimoor Work\\\\DIT-Code\\\\planet-tota-new\\\\planettota\\\\src\\\\components\\\\indexSlider\\\\index.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Slider from 'react-slick';\nimport { arrows_down } from '../../assets/images';\nimport { LazyLoadImg } from '..';\n\nfunction IndexSlider(props) {\n  const {\n    content,\n    settings\n  } = props;\n  const charSlider = useRef(null);\n  const [index, setindex] = useState();\n\n  const handleClick = i => {\n    if (i !== index) {\n      setindex(prev => prev = i);\n    }\n  };\n\n  useEffect(() => {\n    setindex(content[0].id);\n  }, [content]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n    ref: charSlider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), content.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: index === item.id ? 'select item' : 'item',\n      onClick: () => handleClick(item.id),\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(LazyLoadImg, {\n      url: item.img,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"title font_Helvetica\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, item.name));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"next_btn nav_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrows_down,\n    alt: \"\",\n    onClick: () => charSlider.current.slickNext(),\n    className: \"img_fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prev_btn nav_btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: arrows_down,\n    alt: \"\",\n    onClick: () => charSlider.current.slickPrev(),\n    className: \"img_fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }))), content.filter(data => data.id === index).map((item, i) => {\n    let Item = item.profile;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"costumes_wrapper mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, Item.map((value, i) => {\n      return /*#__PURE__*/React.createElement(LazyLoadImg, {\n        url: value,\n        alt: \"\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      });\n    }));\n  }));\n}\n\nexport default IndexSlider;","map":{"version":3,"sources":["C:/Taimoor Work/Taimoor Work/DIT-Code/planet-tota-new/planettota/src/components/indexSlider/index.jsx"],"names":["React","useState","useEffect","useRef","Slider","arrows_down","LazyLoadImg","IndexSlider","props","content","settings","charSlider","index","setindex","handleClick","i","prev","id","map","item","img","name","current","slickNext","slickPrev","filter","data","Item","profile","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport {\r\n    arrows_down,\r\n} from '../../assets/images';\r\nimport { LazyLoadImg } from '..';\r\n\r\nfunction IndexSlider(props) {\r\n    const { content, settings } = props;\r\n    const charSlider = useRef(null);\r\n\r\n    const [index, setindex] = useState();\r\n\r\n    const handleClick = (i) => {\r\n        if (i !== index) {\r\n            setindex(prev => prev = i);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setindex(content[0].id);\r\n    }, [content]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"slider_wrapper\">\r\n                <Slider\r\n                    {...settings}\r\n                    ref={charSlider}\r\n                >\r\n                    {content.map((item, i) => {\r\n                        return (\r\n                            <div\r\n                                className={index === item.id ? 'select item' : 'item'}\r\n                                onClick={() => handleClick(item.id)}\r\n                                key={i}>\r\n                                <LazyLoadImg\r\n                                    url={item.img}\r\n                                    alt=''\r\n                                />\r\n                                <h5 className='title font_Helvetica'>{item.name}</h5>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </Slider>\r\n                <div className=\"next_btn nav_btn\">\r\n                    <img src={arrows_down} alt=\"\" onClick={() => charSlider.current.slickNext()} className=\"img_fluid\" />\r\n                </div>\r\n                <div className=\"prev_btn nav_btn\">\r\n                    <img src={arrows_down} alt=\"\" onClick={() => charSlider.current.slickPrev()} className=\"img_fluid\" />\r\n                </div>\r\n            </div>\r\n            {\r\n                content.filter(data => data.id === index).map((item, i) => {\r\n                    let Item = item.profile;\r\n                    return (\r\n                        <div key={i} className=\"costumes_wrapper mt-5\">\r\n                            {\r\n                                Item.map((value, i) => {\r\n                                    return (\r\n                                        <LazyLoadImg\r\n                                            url={value}\r\n                                            alt=''\r\n                                            key={i}\r\n                                        />\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default IndexSlider;"]},"metadata":{},"sourceType":"module"}