{"ast":null,"code":"var _jsxFileName = \"C:\\\\Taimoor Work\\\\Downloads\\\\Planet Tota\\\\Code\\\\planettota\\\\src\\\\components\\\\countdown-timer\\\\index.jsx\";\nimport React, { useEffect, useState } from 'react';\n\nfunction CountDownTimer(props) {\n  const calculateTimeLeft = () => {\n    let difference = +new Date(props.countdown) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        d: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        h: Math.floor(difference / (1000 * 60 * 60) % 24),\n        m: Math.floor(difference / 1000 / 60 % 60),\n        s: Math.floor(difference / 1000 % 60)\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n  const timerComponents = [];\n  Object.keys(timeLeft).forEach(interval => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push( /*#__PURE__*/React.createElement(\"p\", {\n      key: interval,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, timeLeft[interval]), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 50\n      }\n    }, interval)));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, timerComponents.length ? timerComponents : props.checkFinished ? props.checkFinished(true) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 107\n    }\n  }, \"Timer Finished!\"));\n}\n\nexport default CountDownTimer;","map":{"version":3,"sources":["C:/Taimoor Work/Downloads/Planet Tota/Code/planettota/src/components/countdown-timer/index.jsx"],"names":["React","useEffect","useState","CountDownTimer","props","calculateTimeLeft","difference","Date","countdown","timeLeft","d","Math","floor","h","m","s","setTimeLeft","timer","setTimeout","clearTimeout","timerComponents","Object","keys","forEach","interval","push","length","checkFinished"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,UAAU,GAAG,CAAC,IAAIC,IAAJ,CAASH,KAAK,CAACI,SAAf,CAAD,GAA6B,CAAC,IAAID,IAAJ,EAA/C;AACA,QAAIE,QAAQ,GAAG,EAAf;;AAEA,QAAIH,UAAU,GAAG,CAAjB,EAAoB;AAChBG,MAAAA,QAAQ,GAAG;AACPC,QAAAA,CAAC,EAAEC,IAAI,CAACC,KAAL,CAAWN,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CADI;AAEPO,QAAAA,CAAC,EAAEF,IAAI,CAACC,KAAL,CAAYN,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,GAAkC,EAA7C,CAFI;AAGPQ,QAAAA,CAAC,EAAEH,IAAI,CAACC,KAAL,CAAYN,UAAU,GAAG,IAAb,GAAoB,EAArB,GAA2B,EAAtC,CAHI;AAIPS,QAAAA,CAAC,EAAEJ,IAAI,CAACC,KAAL,CAAYN,UAAU,GAAG,IAAd,GAAsB,EAAjC;AAJI,OAAX;AAMH;;AACD,WAAOG,QAAP;AACH,GAbD;;AAeA,QAAM,CAACA,QAAD,EAAWO,WAAX,IAA0Bd,QAAQ,CAACG,iBAAiB,EAAlB,CAAxC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BF,MAAAA,WAAW,CAACX,iBAAiB,EAAlB,CAAX;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAMc,YAAY,CAACF,KAAD,CAAzB;AACH,GANQ,CAAT;AASA,QAAMG,eAAe,GAAG,EAAxB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYb,QAAZ,EAAsBc,OAAtB,CAA+BC,QAAD,IAAc;AACxC,QAAI,CAACf,QAAQ,CAACe,QAAD,CAAb,EAAyB;AACrB;AACH;;AAEDJ,IAAAA,eAAe,CAACK,IAAhB,eACI;AAAG,MAAA,GAAG,EAAED,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOf,QAAQ,CAACe,QAAD,CAAf,CADJ,eACqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,QAAP,CADrC,CADJ;AAKH,GAVD;AAaA,sBACI,0CACKJ,eAAe,CAACM,MAAhB,GAAyBN,eAAzB,GAA2ChB,KAAK,CAACuB,aAAN,GAAsBvB,KAAK,CAACuB,aAAN,CAAoB,IAApB,CAAtB,gBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADlG,CADJ;AAKH;;AAKD,eAAexB,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction CountDownTimer(props) {\r\n    const calculateTimeLeft = () => {\r\n        let difference = +new Date(props.countdown) - +new Date();\r\n        let timeLeft = {};\r\n\r\n        if (difference > 0) {\r\n            timeLeft = {\r\n                d: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n                h: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n                m: Math.floor((difference / 1000 / 60) % 60),\r\n                s: Math.floor((difference / 1000) % 60)\r\n            };\r\n        }\r\n        return timeLeft;\r\n    }\r\n\r\n    const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            setTimeLeft(calculateTimeLeft());\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timer);\r\n    });\r\n\r\n\r\n    const timerComponents = [];\r\n\r\n    Object.keys(timeLeft).forEach((interval) => {\r\n        if (!timeLeft[interval]) {\r\n            return;\r\n        }\r\n\r\n        timerComponents.push(\r\n            <p key={interval}>\r\n                <span>{timeLeft[interval]}</span><span>{interval}</span>\r\n            </p>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            {timerComponents.length ? timerComponents : props.checkFinished ? props.checkFinished(true) : <span>Timer Finished!</span>}\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default CountDownTimer;"]},"metadata":{},"sourceType":"module"}