{"ast":null,"code":"import clamp from 'lodash-es/clamp';\nimport { setStyle } from '../../utils/set-style';\nvar GLOW_MAX_OPACITY = 0.75;\nvar GLOW_MAX_OFFSET = 0.25;\n\nvar Glow =\n/** @class */\nfunction () {\n  function Glow(_scrollbar) {\n    this._scrollbar = _scrollbar;\n    this._canvas = document.createElement('canvas');\n    this._ctx = this._canvas.getContext('2d');\n    setStyle(this._canvas, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      display: 'none'\n    });\n  }\n\n  Glow.prototype.mount = function () {\n    this._scrollbar.containerEl.appendChild(this._canvas);\n  };\n\n  Glow.prototype.unmount = function () {\n    if (this._canvas.parentNode) {\n      this._canvas.parentNode.removeChild(this._canvas);\n    }\n  };\n\n  Glow.prototype.adjust = function () {\n    var size = this._scrollbar.size;\n    var DPR = window.devicePixelRatio || 1;\n    var nextWidth = size.container.width * DPR;\n    var nextHeight = size.container.height * DPR;\n\n    if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {\n      return;\n    }\n\n    this._canvas.width = nextWidth;\n    this._canvas.height = nextHeight;\n\n    this._ctx.scale(DPR, DPR);\n  };\n\n  Glow.prototype.recordTouch = function (event) {\n    var touch = event.touches[event.touches.length - 1];\n    this._touchX = touch.clientX;\n    this._touchY = touch.clientY;\n  };\n\n  Glow.prototype.render = function (_a, color) {\n    var _b = _a.x,\n        x = _b === void 0 ? 0 : _b,\n        _c = _a.y,\n        y = _c === void 0 ? 0 : _c;\n\n    if (!x && !y) {\n      setStyle(this._canvas, {\n        display: 'none'\n      });\n      return;\n    }\n\n    setStyle(this._canvas, {\n      display: 'block'\n    });\n    var size = this._scrollbar.size;\n\n    this._ctx.clearRect(0, 0, size.container.width, size.container.height);\n\n    this._ctx.fillStyle = color;\n\n    this._renderX(x);\n\n    this._renderY(y);\n  };\n\n  Glow.prototype._getMaxOverscroll = function () {\n    var options = this._scrollbar.options.plugins.overscroll;\n    return options && options.maxOverscroll ? options.maxOverscroll : 150;\n  };\n\n  Glow.prototype._renderX = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on right side\n      // horizontally flip\n      ctx.transform(-1, 0, 0, 1, width, 0);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = Math.abs(strength);\n    var y = this._touchY || height / 2;\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(0, -startOffset);\n    ctx.quadraticCurveTo(x, y, 0, height + startOffset);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  Glow.prototype._renderY = function (strength) {\n    var size = this._scrollbar.size;\n\n    var maxOverscroll = this._getMaxOverscroll();\n\n    var _a = size.container,\n        width = _a.width,\n        height = _a.height;\n    var ctx = this._ctx;\n    ctx.save();\n\n    if (strength > 0) {\n      // glow on bottom side\n      // vertically flip\n      ctx.transform(1, 0, 0, -1, 0, height);\n    }\n\n    var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n    var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width; // controll point\n\n    var x = this._touchX || width / 2;\n    var y = Math.abs(strength);\n    ctx.globalAlpha = opacity;\n    ctx.beginPath();\n    ctx.moveTo(-startOffset, 0);\n    ctx.quadraticCurveTo(x, y, width + startOffset, 0);\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  };\n\n  return Glow;\n}();\n\nexport { Glow };","map":{"version":3,"sources":["../../src/plugins/overscroll/glow.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import clamp from 'lodash-es/clamp';\nimport { setStyle } from '../../utils/set-style';\nvar GLOW_MAX_OPACITY = 0.75;\nvar GLOW_MAX_OFFSET = 0.25;\nvar Glow = /** @class */ (function () {\n    function Glow(_scrollbar) {\n        this._scrollbar = _scrollbar;\n        this._canvas = document.createElement('canvas');\n        this._ctx = this._canvas.getContext('2d');\n        setStyle(this._canvas, {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            display: 'none',\n        });\n    }\n    Glow.prototype.mount = function () {\n        this._scrollbar.containerEl.appendChild(this._canvas);\n    };\n    Glow.prototype.unmount = function () {\n        if (this._canvas.parentNode) {\n            this._canvas.parentNode.removeChild(this._canvas);\n        }\n    };\n    Glow.prototype.adjust = function () {\n        var size = this._scrollbar.size;\n        var DPR = window.devicePixelRatio || 1;\n        var nextWidth = size.container.width * DPR;\n        var nextHeight = size.container.height * DPR;\n        if (nextWidth === this._canvas.width && nextHeight === this._canvas.height) {\n            return;\n        }\n        this._canvas.width = nextWidth;\n        this._canvas.height = nextHeight;\n        this._ctx.scale(DPR, DPR);\n    };\n    Glow.prototype.recordTouch = function (event) {\n        var touch = event.touches[event.touches.length - 1];\n        this._touchX = touch.clientX;\n        this._touchY = touch.clientY;\n    };\n    Glow.prototype.render = function (_a, color) {\n        var _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c;\n        if (!x && !y) {\n            setStyle(this._canvas, {\n                display: 'none',\n            });\n            return;\n        }\n        setStyle(this._canvas, {\n            display: 'block',\n        });\n        var size = this._scrollbar.size;\n        this._ctx.clearRect(0, 0, size.container.width, size.container.height);\n        this._ctx.fillStyle = color;\n        this._renderX(x);\n        this._renderY(y);\n    };\n    Glow.prototype._getMaxOverscroll = function () {\n        var options = this._scrollbar.options.plugins.overscroll;\n        return options && options.maxOverscroll ? options.maxOverscroll : 150;\n    };\n    Glow.prototype._renderX = function (strength) {\n        var size = this._scrollbar.size;\n        var maxOverscroll = this._getMaxOverscroll();\n        var _a = size.container, width = _a.width, height = _a.height;\n        var ctx = this._ctx;\n        ctx.save();\n        if (strength > 0) {\n            // glow on right side\n            // horizontally flip\n            ctx.transform(-1, 0, 0, 1, width, 0);\n        }\n        var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n        var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width;\n        // controll point\n        var x = Math.abs(strength);\n        var y = this._touchY || (height / 2);\n        ctx.globalAlpha = opacity;\n        ctx.beginPath();\n        ctx.moveTo(0, -startOffset);\n        ctx.quadraticCurveTo(x, y, 0, height + startOffset);\n        ctx.fill();\n        ctx.closePath();\n        ctx.restore();\n    };\n    Glow.prototype._renderY = function (strength) {\n        var size = this._scrollbar.size;\n        var maxOverscroll = this._getMaxOverscroll();\n        var _a = size.container, width = _a.width, height = _a.height;\n        var ctx = this._ctx;\n        ctx.save();\n        if (strength > 0) {\n            // glow on bottom side\n            // vertically flip\n            ctx.transform(1, 0, 0, -1, 0, height);\n        }\n        var opacity = clamp(Math.abs(strength) / maxOverscroll, 0, GLOW_MAX_OPACITY);\n        var startOffset = clamp(opacity, 0, GLOW_MAX_OFFSET) * width;\n        // controll point\n        var x = this._touchX || (width / 2);\n        var y = Math.abs(strength);\n        ctx.globalAlpha = opacity;\n        ctx.beginPath();\n        ctx.moveTo(-startOffset, 0);\n        ctx.quadraticCurveTo(x, y, width + startOffset, 0);\n        ctx.fill();\n        ctx.closePath();\n        ctx.restore();\n    };\n    return Glow;\n}());\nexport { Glow };\n//# sourceMappingURL=glow.js.map"]},"metadata":{},"sourceType":"module"}