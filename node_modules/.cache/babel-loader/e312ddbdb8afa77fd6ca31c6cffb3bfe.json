{"ast":null,"code":"var _jsxFileName = \"C:\\\\Taimoor Work\\\\Taimoor Work\\\\DIT-Code\\\\planet-tota-new\\\\planettota\\\\src\\\\components\\\\loader\\\\index.jsx\";\nimport React, { useState } from 'react';\nimport { loader } from '../../assets/images';\n\nfunction Loader(props) {\n  const [isLoading, setisLoading] = useState(true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: loader,\n    className: \"img_fluid\",\n    alt: \"Loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  })) : '', /*#__PURE__*/React.createElement(\"img\", {\n    src: props.src,\n    style: isLoading ? {\n      display: 'none'\n    } : {\n      display: 'inline-block'\n    },\n    alt: props.alt ? '' : '',\n    onLoad: () => setisLoading(false),\n    className: props.class ? ' img_fluid' : 'img_fluid',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Loader;","map":{"version":3,"sources":["C:/Taimoor Work/Taimoor Work/DIT-Code/planet-tota-new/planettota/src/components/loader/index.jsx"],"names":["React","useState","loader","Loader","props","isLoading","setisLoading","src","display","alt","class"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,MADJ,QAEO,qBAFP;;AAKA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,sBACI,0CAEQI,SAAS,gBACL;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEH,MAAV;AAAkB,IAAA,SAAS,EAAC,WAA5B;AAAwC,IAAA,GAAG,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADK,GAKL,EAPZ,eASI;AACI,IAAA,GAAG,EAAEE,KAAK,CAACG,GADf;AAEI,IAAA,KAAK,EAAEF,SAAS,GAAG;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAyB;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAF7C;AAGI,IAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,GAAY,EAAZ,GAAiB,EAH1B;AAII,IAAA,MAAM,EAAE,MAAMH,YAAY,CAAC,KAAD,CAJ9B;AAKI,IAAA,SAAS,EAAEF,KAAK,CAACM,KAAN,GAAc,YAAd,GAA6B,WAL5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAkBH;;AAED,eAAeP,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    loader,\r\n} from '../../assets/images';\r\n\r\n\r\nfunction Loader(props) {\r\n    const [isLoading, setisLoading] = useState(true);\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <div className='Loader'>\r\n                        <img src={loader} className='img_fluid' alt='Loader' />\r\n                    </div>\r\n                    :\r\n                    ''\r\n            }\r\n            <img\r\n                src={props.src}\r\n                style={isLoading ? { display: 'none' } : { display: 'inline-block' }}\r\n                alt={props.alt ? '' : ''}\r\n                onLoad={() => setisLoading(false)}\r\n                className={props.class ? ' img_fluid' : 'img_fluid'} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Loader;"]},"metadata":{},"sourceType":"module"}