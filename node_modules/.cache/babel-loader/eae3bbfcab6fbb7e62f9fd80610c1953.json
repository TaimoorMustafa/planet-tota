{"ast":null,"code":"import React, { useRef, useState, useEffect } from 'react';\nimport VIDEOJS from 'video.js';\nimport videoJsContribQualityLevels from 'videojs-contrib-quality-levels';\nimport videoJsHlsQualitySelector from 'videojs-hls-quality-selector';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar HOTKEYS_HANDLER = function HOTKEYS_HANDLER(event, player) {\n  if (player) {\n    var currentTime = player.currentTime();\n    var currentVolume = player.volume();\n    var isMuted = player.muted();\n    var isFullscreen = player.isFullscreen();\n    var isPaused = player.paused(); // Go 5 seconds backward\n\n    if (event.code === 'ArrowLeft') {\n      player.currentTime(currentTime - 5);\n    } // Go 5 seconds forward\n\n\n    if (event.code === 'ArrowRight') {\n      player.currentTime(currentTime + 5);\n    } // Increase volume by 5%\n\n\n    if (event.code === 'ArrowUp') {\n      if (currentVolume <= 0.95) {\n        player.volume(currentVolume + 0.05);\n      } else {\n        player.volume(1);\n      }\n    } // Decrease volume by 5%\n\n\n    if (event.code === 'ArrowDown') {\n      if (currentVolume >= 0.05) {\n        player.volume(currentVolume - 0.05);\n      } else {\n        player.volume(0);\n      }\n    } // Mute/Unmute toggle\n\n\n    if (event.code === 'KeyM') {\n      if (isMuted) {\n        player.muted(false);\n      } else {\n        player.muted(true);\n      }\n    } // Fullscreen/Exit toggle\n\n\n    if (event.code === 'KeyF') {\n      if (isFullscreen) {\n        player.exitFullscreen();\n      } else {\n        player.requestFullscreen();\n      }\n    } // Play/Pause toggle\n\n\n    if (event.code === 'Space') {\n      if (isPaused) {\n        player.play();\n      } else {\n        player.pause();\n      }\n    }\n  }\n};\n\nvar DEFAULT_OPTIONS = {\n  controls: true,\n  controlBar: {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'customControlSpacer', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'playbackRateMenuButton', 'fullscreenToggle'],\n    progressControl: {\n      seekBar: true\n    }\n  },\n  autoplay: false,\n  fluid: true,\n  inactivityTimeout: 2500,\n  preload: 'auto',\n  width: 100,\n  playbackRates: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2],\n  html5: {\n    vhs: {\n      enableLowInitialPlaylist: true,\n      smoothQualityChange: true,\n      overrideNative: true\n    }\n  },\n  plugins: {\n    qualityLevel: {},\n    hlsQualitySelector: {\n      displayCurrentQuality: true\n    }\n  }\n};\n\nfunction usePlayer(options) {\n  var ref = useRef(null);\n\n  var _useState = useState(null),\n      player = _useState[0],\n      setPlayer = _useState[1];\n\n  useEffect(function () {\n    VIDEOJS.registerPlugin('qualityLevel', videoJsContribQualityLevels);\n    VIDEOJS.registerPlugin('hlsQualitySelector', videoJsHlsQualitySelector);\n  }, []);\n  useEffect(function () {\n    var vjsPlayer = ref.current ? VIDEOJS(ref.current, _extends({}, DEFAULT_OPTIONS, options, {\n      userActions: {\n        hotkeys: function hotkeys(event) {\n          HOTKEYS_HANDLER(event, vjsPlayer);\n        }\n      }\n    }), function () {\n      if (vjsPlayer) {\n        setPlayer(vjsPlayer);\n\n        if (options.sources) {\n          vjsPlayer.src(options.sources);\n        } else if (options.src) {\n          vjsPlayer.src(options.src);\n        }\n\n        vjsPlayer.currentTime(0);\n        vjsPlayer.load();\n      }\n    }) : null;\n    return function () {\n      if (vjsPlayer) {\n        vjsPlayer.reset();\n      }\n    };\n  }, [options]);\n  return {\n    ref: ref,\n    player: player\n  };\n} // ANCHOR React\n\n\nfunction UncontrolledLionPlayer(_ref) {\n  var playerRef = _ref.playerRef;\n  return React.createElement(\"div\", {\n    \"data-vjs-player\": true\n  }, React.createElement(\"video\", {\n    ref: playerRef,\n    className: \"video-js vjs-theme-lion\"\n  }, React.createElement(\"p\", {\n    className: \"vjs-no-js\"\n  }, \"To view this video please enable JavaScript, and consider upgrading to a web browser that \", React.createElement(\"a\", {\n    href: \"https://videojs.com/html5-video-support/\",\n    target: \"_blank\"\n  }, \"supports HTML5 video\"))));\n}\n\nfunction LionPlayer(props) {\n  var _usePlayer = usePlayer(_extends({}, props)),\n      ref = _usePlayer.ref;\n\n  return React.createElement(UncontrolledLionPlayer, {\n    playerRef: ref\n  });\n}\n\nexport { LionPlayer, UncontrolledLionPlayer, usePlayer };","map":{"version":3,"sources":["../src/utils/hotkeys-handler.ts","../src/constants/options.ts","../src/hooks/usePlayer.tsx","../src/components/UncontrolledLionPlayer.tsx","../src/components/LionPlayer.tsx"],"names":["HOTKEYS_HANDLER","currentTime","player","currentVolume","isMuted","isFullscreen","isPaused","event","DEFAULT_OPTIONS","controls","controlBar","children","progressControl","seekBar","autoplay","fluid","inactivityTimeout","preload","width","playbackRates","html5","vhs","enableLowInitialPlaylist","smoothQualityChange","overrideNative","plugins","qualityLevel","hlsQualitySelector","displayCurrentQuality","usePlayer","options","ref","useRef","setPlayer","useState","useEffect","VIDEOJS","vjsPlayer","userActions","hotkeys","UncontrolledLionPlayer","playerRef","className","href","target","LionPlayer","props"],"mappings":"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","sourcesContent":["// ANCHOR VideoJS\nimport VIDEOJS, { VideoJsPlayer } from 'video.js'\n\nexport const HOTKEYS_HANDLER = (\n  event: VIDEOJS.KeyboardEvent,\n  player: VideoJsPlayer | null,\n) => {\n  if (player) {\n    const currentTime = player.currentTime();\n    const currentVolume = player.volume();\n    const isMuted = player.muted();\n    const isFullscreen = player.isFullscreen();\n    const isPaused = player.paused();\n\n    // Go 5 seconds backward\n    if (event.code === 'ArrowLeft') {\n      player.currentTime(currentTime - 5);\n    }\n\n    // Go 5 seconds forward\n    if (event.code === 'ArrowRight') {\n      player.currentTime(currentTime + 5);\n    }\n\n    // Increase volume by 5%\n    if (event.code === 'ArrowUp') {\n      if (currentVolume <= 0.95) {\n        player.volume(currentVolume + 0.05);\n      } else {\n        player.volume(1);\n      }\n    }\n\n    // Decrease volume by 5%\n    if (event.code === 'ArrowDown') {\n      if (currentVolume >= 0.05) {\n        player.volume(currentVolume - 0.05);\n      } else {\n        player.volume(0);\n      }\n    }\n\n    // Mute/Unmute toggle\n    if (event.code === 'KeyM') {\n      if (isMuted) {\n        player.muted(false);\n      } else {\n        player.muted(true);\n      }\n    }\n\n    // Fullscreen/Exit toggle\n    if (event.code === 'KeyF') {\n      if (isFullscreen) {\n        player.exitFullscreen()\n      } else {\n        player.requestFullscreen();\n      }\n    }\n\n    // Play/Pause toggle\n    if (event.code === 'Space') {\n      if (isPaused) {\n        player.play();\n      } else {\n        player.pause();\n      }\n    }\n  }\n}\n","// ANCHOR VideoJS\nimport { VideoJsPlayerOptions } from 'video.js'\n\nexport const DEFAULT_OPTIONS: VideoJsPlayerOptions = {\n  controls: true,\n  controlBar: {\n    children: [\n      'playToggle',\n      'volumePanel',\n      'currentTimeDisplay',\n      'timeDivider',\n      'durationDisplay',\n      'progressControl',\n      'liveDisplay',\n      'customControlSpacer',\n      'chaptersButton',\n      'descriptionsButton',\n      'subsCapsButton',\n      'audioTrackButton',\n      'playbackRateMenuButton',\n      'fullscreenToggle',\n    ],\n    progressControl: {\n      seekBar: true\n    }\n  },\n  autoplay: false,\n  fluid: true,\n  inactivityTimeout: 2500,\n  preload: 'auto',\n  width: 100,\n  playbackRates: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2],\n  html5: {\n    vhs: {\n      enableLowInitialPlaylist: true,\n      smoothQualityChange: true,\n      overrideNative: true,\n    },\n  },\n  plugins: {\n    qualityLevel: {},\n    hlsQualitySelector: {\n      displayCurrentQuality: true,\n    },\n  },\n};\n","// ANCHOR React\nimport { useEffect, useRef, useState } from 'react';\n\n// ANCHOR VideoJS\nimport VIDEOJS, { VideoJsPlayer, VideoJsPlayerOptions } from 'video.js'\nimport videoJsContribQualityLevels from 'videojs-contrib-quality-levels'\nimport videoJsHlsQualitySelector from 'videojs-hls-quality-selector'\n\n// ANCHOR Utils\nimport { HOTKEYS_HANDLER } from '../utils/hotkeys-handler';\n\n// ANCHOR Constants\nimport { DEFAULT_OPTIONS } from '../constants/options';\n\nexport default function usePlayer(\n  options: VideoJsPlayerOptions,\n) {\n  const ref = useRef<HTMLVideoElement | null>(null);\n  const [player, setPlayer] = useState<VideoJsPlayer | null>(null)\n\n  useEffect(() => {\n    VIDEOJS.registerPlugin('qualityLevel', videoJsContribQualityLevels)\n    VIDEOJS.registerPlugin('hlsQualitySelector', videoJsHlsQualitySelector)\n  }, [])\n\n  useEffect(() => {\n    const vjsPlayer = ref.current\n      ? VIDEOJS(ref.current, {\n        ...DEFAULT_OPTIONS,\n        ...options,\n        userActions: {\n          hotkeys: (event) => {\n            HOTKEYS_HANDLER(event, vjsPlayer)\n          }\n        },\n      }, () => {\n        if (vjsPlayer) {\n          setPlayer(vjsPlayer);\n\n          if (options.sources) {\n            vjsPlayer.src(options.sources);\n          } else if (options.src) {\n            vjsPlayer.src(options.src)\n          }\n\n          vjsPlayer.currentTime(0);\n          vjsPlayer.load();\n        }\n      })\n      : null;\n\n    return () => {\n      if (vjsPlayer) {\n        vjsPlayer.reset();\n      }\n    };\n  }, [options]);\n\n  return {\n    ref,\n    player,\n  };\n};\n","// ANCHOR React\nimport React from \"react\";\n\nexport interface IUncontrolledPlayerProps {\n  playerRef: React.LegacyRef<HTMLVideoElement>\n}\n\nexport default function UncontrolledLionPlayer(\n  { playerRef }: IUncontrolledPlayerProps\n) {\n  return (\n    <div data-vjs-player>\n      <video\n        ref={playerRef}\n        className=\"video-js vjs-theme-lion\"\n      >\n        <p className=\"vjs-no-js\">\n          To view this video please enable JavaScript, and consider upgrading to a\n          web browser that <a href=\"https://videojs.com/html5-video-support/\" target=\"_blank\">supports HTML5 video\n          </a>\n        </p>\n      </video>\n    </div>\n  )\n};\n","// ANCHOR React\nimport React from 'react';\n\n// ANCHOR VideoJS\nimport { VideoJsPlayerOptions, } from 'video.js';\n\n// ANCHOR Hooks\nimport usePlayer from '../hooks/usePlayer';\n\n// ANCHOR Components\nimport UncontrolledLionPlayer from './UncontrolledLionPlayer';\n\nexport default function LionPlayer(\n  props?: VideoJsPlayerOptions,\n) {\n  const { ref } = usePlayer({ ...props });\n\n  return <UncontrolledLionPlayer playerRef={ref} />;\n};\n\n"]},"metadata":{},"sourceType":"module"}