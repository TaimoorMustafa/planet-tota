{"version":3,"file":"lion-player.cjs.production.min.js","sources":["../src/utils/hotkeys-handler.ts","../src/constants/options.ts","../src/hooks/usePlayer.tsx","../src/components/UncontrolledLionPlayer.tsx","../src/components/LionPlayer.tsx"],"sourcesContent":["// ANCHOR VideoJS\nimport VIDEOJS, { VideoJsPlayer } from 'video.js'\n\nexport const HOTKEYS_HANDLER = (\n  event: VIDEOJS.KeyboardEvent,\n  player: VideoJsPlayer | null,\n) => {\n  if (player) {\n    const currentTime = player.currentTime();\n    const currentVolume = player.volume();\n    const isMuted = player.muted();\n    const isFullscreen = player.isFullscreen();\n    const isPaused = player.paused();\n\n    // Go 5 seconds backward\n    if (event.code === 'ArrowLeft') {\n      player.currentTime(currentTime - 5);\n    }\n\n    // Go 5 seconds forward\n    if (event.code === 'ArrowRight') {\n      player.currentTime(currentTime + 5);\n    }\n\n    // Increase volume by 5%\n    if (event.code === 'ArrowUp') {\n      if (currentVolume <= 0.95) {\n        player.volume(currentVolume + 0.05);\n      } else {\n        player.volume(1);\n      }\n    }\n\n    // Decrease volume by 5%\n    if (event.code === 'ArrowDown') {\n      if (currentVolume >= 0.05) {\n        player.volume(currentVolume - 0.05);\n      } else {\n        player.volume(0);\n      }\n    }\n\n    // Mute/Unmute toggle\n    if (event.code === 'KeyM') {\n      if (isMuted) {\n        player.muted(false);\n      } else {\n        player.muted(true);\n      }\n    }\n\n    // Fullscreen/Exit toggle\n    if (event.code === 'KeyF') {\n      if (isFullscreen) {\n        player.exitFullscreen()\n      } else {\n        player.requestFullscreen();\n      }\n    }\n\n    // Play/Pause toggle\n    if (event.code === 'Space') {\n      if (isPaused) {\n        player.play();\n      } else {\n        player.pause();\n      }\n    }\n  }\n}\n","// ANCHOR VideoJS\nimport { VideoJsPlayerOptions } from 'video.js'\n\nexport const DEFAULT_OPTIONS: VideoJsPlayerOptions = {\n  controls: true,\n  controlBar: {\n    children: [\n      'playToggle',\n      'volumePanel',\n      'currentTimeDisplay',\n      'timeDivider',\n      'durationDisplay',\n      'progressControl',\n      'liveDisplay',\n      'customControlSpacer',\n      'chaptersButton',\n      'descriptionsButton',\n      'subsCapsButton',\n      'audioTrackButton',\n      'playbackRateMenuButton',\n      'fullscreenToggle',\n    ],\n    progressControl: {\n      seekBar: true\n    }\n  },\n  autoplay: false,\n  fluid: true,\n  inactivityTimeout: 2500,\n  preload: 'auto',\n  width: 100,\n  playbackRates: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2],\n  html5: {\n    vhs: {\n      enableLowInitialPlaylist: true,\n      smoothQualityChange: true,\n      overrideNative: true,\n    },\n  },\n  plugins: {\n    qualityLevel: {},\n    hlsQualitySelector: {\n      displayCurrentQuality: true,\n    },\n  },\n};\n","// ANCHOR React\nimport { useEffect, useRef, useState } from 'react';\n\n// ANCHOR VideoJS\nimport VIDEOJS, { VideoJsPlayer, VideoJsPlayerOptions } from 'video.js'\nimport videoJsContribQualityLevels from 'videojs-contrib-quality-levels'\nimport videoJsHlsQualitySelector from 'videojs-hls-quality-selector'\n\n// ANCHOR Utils\nimport { HOTKEYS_HANDLER } from '../utils/hotkeys-handler';\n\n// ANCHOR Constants\nimport { DEFAULT_OPTIONS } from '../constants/options';\n\nexport default function usePlayer(\n  options: VideoJsPlayerOptions,\n) {\n  const ref = useRef<HTMLVideoElement | null>(null);\n  const [player, setPlayer] = useState<VideoJsPlayer | null>(null)\n\n  useEffect(() => {\n    VIDEOJS.registerPlugin('qualityLevel', videoJsContribQualityLevels)\n    VIDEOJS.registerPlugin('hlsQualitySelector', videoJsHlsQualitySelector)\n  }, [])\n\n  useEffect(() => {\n    const vjsPlayer = ref.current\n      ? VIDEOJS(ref.current, {\n        ...DEFAULT_OPTIONS,\n        ...options,\n        userActions: {\n          hotkeys: (event) => {\n            HOTKEYS_HANDLER(event, vjsPlayer)\n          }\n        },\n      }, () => {\n        if (vjsPlayer) {\n          setPlayer(vjsPlayer);\n\n          if (options.sources) {\n            vjsPlayer.src(options.sources);\n          } else if (options.src) {\n            vjsPlayer.src(options.src)\n          }\n\n          vjsPlayer.currentTime(0);\n          vjsPlayer.load();\n        }\n      })\n      : null;\n\n    return () => {\n      if (vjsPlayer) {\n        vjsPlayer.reset();\n      }\n    };\n  }, [options]);\n\n  return {\n    ref,\n    player,\n  };\n};\n","// ANCHOR React\nimport React from \"react\";\n\nexport interface IUncontrolledPlayerProps {\n  playerRef: React.LegacyRef<HTMLVideoElement>\n}\n\nexport default function UncontrolledLionPlayer(\n  { playerRef }: IUncontrolledPlayerProps\n) {\n  return (\n    <div data-vjs-player>\n      <video\n        ref={playerRef}\n        className=\"video-js vjs-theme-lion\"\n      >\n        <p className=\"vjs-no-js\">\n          To view this video please enable JavaScript, and consider upgrading to a\n          web browser that <a href=\"https://videojs.com/html5-video-support/\" target=\"_blank\">supports HTML5 video\n          </a>\n        </p>\n      </video>\n    </div>\n  )\n};\n","// ANCHOR React\nimport React from 'react';\n\n// ANCHOR VideoJS\nimport { VideoJsPlayerOptions, } from 'video.js';\n\n// ANCHOR Hooks\nimport usePlayer from '../hooks/usePlayer';\n\n// ANCHOR Components\nimport UncontrolledLionPlayer from './UncontrolledLionPlayer';\n\nexport default function LionPlayer(\n  props?: VideoJsPlayerOptions,\n) {\n  const { ref } = usePlayer({ ...props });\n\n  return <UncontrolledLionPlayer playerRef={ref} />;\n};\n\n"],"names":["DEFAULT_OPTIONS","controls","controlBar","children","progressControl","seekBar","autoplay","fluid","inactivityTimeout","preload","width","playbackRates","html5","vhs","enableLowInitialPlaylist","smoothQualityChange","overrideNative","plugins","qualityLevel","hlsQualitySelector","displayCurrentQuality","usePlayer","options","ref","useRef","useState","player","setPlayer","useEffect","VIDEOJS","registerPlugin","videoJsContribQualityLevels","videoJsHlsQualitySelector","vjsPlayer","current","userActions","hotkeys","event","currentTime","currentVolume","volume","isMuted","muted","isFullscreen","isPaused","paused","code","exitFullscreen","requestFullscreen","play","pause","HOTKEYS_HANDLER","sources","src","load","reset","UncontrolledLionPlayer","React","playerRef","className","href","target","props"],"mappings":"4eAGO,ICAMA,EAAwC,CACnDC,UAAU,EACVC,WAAY,CACVC,SAAU,CACR,aACA,cACA,qBACA,cACA,kBACA,kBACA,cACA,sBACA,iBACA,qBACA,iBACA,mBACA,yBACA,oBAEFC,gBAAiB,CACfC,SAAS,IAGbC,UAAU,EACVC,OAAO,EACPC,kBAAmB,KACnBC,QAAS,OACTC,MAAO,IACPC,cAAe,CAAC,IAAM,GAAK,IAAM,EAAG,KAAM,IAAK,GAC/CC,MAAO,CACLC,IAAK,CACHC,0BAA0B,EAC1BC,qBAAqB,EACrBC,gBAAgB,IAGpBC,QAAS,CACPC,aAAc,GACdC,mBAAoB,CAClBC,uBAAuB,cC5BLC,EACtBC,OAEMC,EAAMC,SAAgC,QAChBC,WAA+B,MAApDC,OAAQC,cAEfC,aAAU,WACRC,EAAQC,eAAe,eAAgBC,GACvCF,EAAQC,eAAe,qBAAsBE,KAC5C,IAEHJ,aAAU,eACFK,EAAYV,EAAIW,QAClBL,EAAQN,EAAIW,aACTlC,EACAsB,GACHa,YAAa,CACXC,QAAS,SAACC,IF5BW,SAC7BA,EACAX,MAEIA,EAAQ,KACJY,EAAcZ,EAAOY,cACrBC,EAAgBb,EAAOc,SACvBC,EAAUf,EAAOgB,QACjBC,EAAejB,EAAOiB,eACtBC,EAAWlB,EAAOmB,SAGL,cAAfR,EAAMS,MACRpB,EAAOY,YAAYA,EAAc,GAIhB,eAAfD,EAAMS,MACRpB,EAAOY,YAAYA,EAAc,GAIhB,YAAfD,EAAMS,MAENpB,EAAOc,OADLD,GAAiB,IACLA,EAAgB,IAEhB,GAKC,cAAfF,EAAMS,MAENpB,EAAOc,OADLD,GAAiB,IACLA,EAAgB,IAEhB,GAKC,SAAfF,EAAMS,MAENpB,EAAOgB,OADLD,GAQa,SAAfJ,EAAMS,OACJH,EACFjB,EAAOqB,iBAEPrB,EAAOsB,qBAKQ,UAAfX,EAAMS,OACJF,EACFlB,EAAOuB,OAEPvB,EAAOwB,UEjCHC,CAAgBd,EAAOJ,QAG1B,WACGA,IACFN,EAAUM,GAENX,EAAQ8B,QACVnB,EAAUoB,IAAI/B,EAAQ8B,SACb9B,EAAQ+B,KACjBpB,EAAUoB,IAAI/B,EAAQ+B,KAGxBpB,EAAUK,YAAY,GACtBL,EAAUqB,WAGZ,YAEG,WACDrB,GACFA,EAAUsB,WAGb,CAACjC,IAEG,CACLC,IAAAA,EACAG,OAAAA,YCrDoB8B,YAIpBC,6CACEA,yBACElC,MALJmC,UAMIC,UAAU,2BAEVF,qBAAGE,UAAU,0GAEMF,qBAAGG,KAAK,2CAA2CC,OAAO,iECLnFC,SAEgBzC,OAAeyC,WAExBL,gBAACD,GAAuBE,YAFvBnC"}